import timeimport sysimport osimport gcfrom machine import Pinfrom machine import ADC#detect pin from esp32adc = ADC(0)led = Pin(14, Pin.OUT)#func ldrdef readLdr():    lumPerct = (adc.read())    return lumPerctdef sub_cb(topic, msg):  print((topic, msg))  if topic == b'notification' and msg == b'received':    print('ESP received hello message')def connect_and_subscribe():  global client_id, mqtt_server, topic_sub  client = MQTTClient(client_id, mqtt_server)  client.set_callback(sub_cb)  client.connect()  client.subscribe(topic_sub)  print('Connected to %s MQTT broker, subscribed to %s topic' % (mqtt_server, topic_sub))  return clientdef restart_and_reconnect():  print('Failed to connect to MQTT broker. Reconnecting...')  time.sleep(10)  machine.reset() try:  client = connect_and_subscribe()except OSError as e:  restart_and_reconnect()while True:   try:    client.check_msg()    if (time.time() - last_message) > message_interval:      msg = b''+str(readLdr())      client.publish(topic_pub, msg)      last_message = time.time()      counter += 1      time.sleep_ms(100)   except OSError as e:    restart_and_reconnect()